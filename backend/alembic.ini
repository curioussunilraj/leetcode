# A generic alembic configuration file.

[alembic]
# path to migration scripts
script_location = alembic

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

# Other settings, such as:
# sqlalchemy.url = driver://user:pass@localhost/dbname
# ...
# We will set sqlalchemy.url in env.py programmatically
# from our application's config.
# For now, ensure this line is commented out or not present if env.py handles it.
# sqlalchemy.url = sqlite:///./data/coder_workspace.db
# The above path would be relative to where alembic commands are run.
# It's better to configure this in env.py using the application's settings.

# Revision file naming template
# file_template = %%(rev)s_%%(slug)s
# ... other alembic settings
prepend_sys_path = . # Add current directory to sys.path

# Set to true if you want to output Python logging
# configurations to stderr
# True or False
# logging_config_ あんまり = False
# ...
# Enable support for PostGIS data types
# postgis_support = false

# Enable support for batch mode
# batch_mode = false
# ...
# timezone = UTC
# ...
# revision_environment = false
# ...
# version_path_separator = os  # Use os.path.sep

# Default is true, if you want to run migrations in a transaction
# set to false
# transactional_ddl = true
# ...
# sourceless = false
# ...
# output_encoding = utf-8
# ...
# sqlalchemy_module_prefix = sqlalchemy.
# ...
# migration_environment_id = None
# ...
# package_name = None
# ...
# include_schemas = false
# ...
# compare_type = false
# ...
# compare_server_default = false
# ...
# render_as_batch = false
# ...
# upgrade_token = upgrade
# downgrade_token = downgrade
# ...
# identity_cache_size = 0
# ...
# user_module_prefix = None
# ...
# render_item = None
# ...
# literal_binds = False
# ...
# track_changes = True
# ...
# generate_comments = False
# ...
# run_name = None
# ...
# command_kwargs = {}
# ...
# process_revision_directives = None
# ...
# renderers = {}
# ...
# on_version_output = None
# ...
# Environment context options may be passed here.
# [post_write_hooks]
# a_hook = myapp.hooks:my_hook
# another_hook = myapp.hooks:another_hook(args=true, kwarg1='value')
# Available keys are defined in alembic.runtime.migration.MigrationContext.configure.
# environment_context = {}
# ...
# Template used to generate new revision files.
# file_template = %%(rev)s_%%(slug)s

# Example of how to define a global context variable
# that is available in all revision scripts.
# [context_variables]
# my_variable = my_value
# ...
# Set to true to allow comparison of ENUM types.
# compare_enums = false
# ...
# Set to true to enable support for rendering NULLS FIRST/LAST in ORDER BY.
# nulls_sorting = false
# ...
# Set to true to indicate that the dialect supports comments.
# dialect_supports_comments = false
# ...
# Set to true to indicate that the dialect supports sequences.
# dialect_supports_sequences = false
# ...
# Set to true to indicate that the dialect supports identity columns.
# dialect_supports_identity_columns = false
# ...
# Set to true to indicate that the dialect supports deferrable constraints.
# dialect_supports_deferrable_constraints = false
# ...
# Set to true to indicate that the dialect supports initially deferred constraints.
# dialect_supports_initially_deferred_constraints = false
# ...
# Set to true to indicate that the dialect supports partial indexes.
# dialect_supports_partial_indexes = false
# ...
# Set to true to indicate that the dialect supports JSONB.
# dialect_supports_jsonb = false
# ...
# Set to true to indicate that the dialect supports arrays.
# dialect_supports_arrays = false
# ...
# Set to true to indicate that the dialect supports computed columns.
# dialect_supports_computed_columns = false
# ...
# Set to true to indicate that the dialect supports check constraints.
# dialect_supports_check_constraints = false
# ...
# Set to true to indicate that the dialect supports exclusion constraints.
# dialect_supports_exclusion_constraints = false
# ...
# Set to true to indicate that the dialect supports unique constraints.
# dialect_supports_unique_constraints = false
# ...
# Set to true to indicate that the dialect supports foreign key constraints.
# dialect_supports_foreign_key_constraints = false
# ...
# Set to true to indicate that the dialect supports primary key constraints.
# dialect_supports_primary_key_constraints = false
# ...
# Set to true to indicate that the dialect supports NOT NULL constraints.
# dialect_supports_not_null_constraints = false
# ...
# Set to true to indicate that the dialect supports default values.
# dialect_supports_default_values = false
# ...
# Set to true to indicate that the dialect supports indexes.
# dialect_supports_indexes = false
# ...
# Set to true to indicate that the dialect supports tables.
# dialect_supports_tables = false
# ...
# Set to true to indicate that the dialect supports views.
# dialect_supports_views = false
# ...
# Set to true to indicate that the dialect supports materialized views.
# dialect_supports_materialized_views = false
# ...
# Set to true to indicate that the dialect supports schemas.
# dialect_supports_schemas = false
# ...
# Set to true to indicate that the dialect supports domains.
# dialect_supports_domains = false
# ...
# Set to true to indicate that the dialect supports types.
# dialect_supports_types = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on rules.
# dialect_supports_rule_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on partitions.
# dialect_supports_partition_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tablespaces.
# dialect_supports_tablespace_comments = false
# ...
# Set to true to indicate that the dialect supports comments on roles.
# dialect_supports_role_comments = false
# ...
# Set to true to indicate that the dialect supports comments on users.
# dialect_supports_user_comments = false
# ...
# Set to true to indicate that the dialect supports comments on databases.
# dialect_supports_database_comments = false
# ...
# Set to true to indicate that the dialect supports comments on extensions.
# dialect_supports_extension_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search dictionaries.
# dialect_supports_text_search_dictionary_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search parsers.
# dialect_supports_text_search_parser_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search templates.
# dialect_supports_text_search_template_comments = false
# ...
# Set to true to indicate that the dialect supports comments on policies.
# dialect_supports_policy_comments = false
# ...
# Set to true to indicate that the dialect supports comments on publications.
# dialect_supports_publication_comments = false
# ...
# Set to true to indicate that the dialect supports comments on subscriptions.
# dialect_supports_subscription_comments = false
# ...
# Set to true to indicate that the dialect supports comments on event triggers.
# dialect_supports_event_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign data wrappers.
# dialect_supports_foreign_data_wrapper_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign servers.
# dialect_supports_foreign_server_comments = false
# ...
# Set to true to indicate that the dialect supports comments on user mappings.
# dialect_supports_user_mapping_comments = false
# ...
# Set to true to indicate that the dialect supports comments on foreign tables.
# dialect_supports_foreign_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on access methods.
# dialect_supports_access_method_comments = false
# ...
# Set to true to indicate that the dialect supports comments on statistics.
# dialect_supports_statistic_comments = false
# ...
# Set to true to indicate that the dialect supports comments on transforms.
# dialect_supports_transform_comments = false
# ...
# Set to true to indicate that the dialect supports comments on large objects.
# dialect_supports_large_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on languages.
# dialect_supports_language_comments = false
# ...
# Set to true to indicate that the dialect supports comments on server objects.
# dialect_supports_server_object_comments = false
# ...
# Set to true to indicate that the dialect supports comments on tables.
# dialect_supports_table_comments = false
# ...
# Set to true to indicate that the dialect supports comments on columns.
# dialect_supports_column_comments = false
# ...
# Set to true to indicate that the dialect supports comments on constraints.
# dialect_supports_constraint_comments = false
# ...
# Set to true to indicate that the dialect supports comments on indexes.
# dialect_supports_index_comments = false
# ...
# Set to true to indicate that the dialect supports comments on sequences.
# dialect_supports_sequence_comments = false
# ...
# Set to true to indicate that the dialect supports comments on triggers.
# dialect_supports_trigger_comments = false
# ...
# Set to true to indicate that the dialect supports comments on views.
# dialect_supports_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on materialized views.
# dialect_supports_materialized_view_comments = false
# ...
# Set to true to indicate that the dialect supports comments on schemas.
# dialect_supports_schema_comments = false
# ...
# Set to true to indicate that the dialect supports comments on domains.
# dialect_supports_domain_comments = false
# ...
# Set to true to indicate that the dialect supports comments on types.
# dialect_supports_type_comments = false
# ...
# Set to true to indicate that the dialect supports comments on functions.
# dialect_supports_function_comments = false
# ...
# Set to true to indicate that the dialect supports comments on procedures.
# dialect_supports_procedure_comments = false
# ...
# Set to true to indicate that the dialect supports comments on aggregates.
# dialect_supports_aggregate_comments = false
# ...
# Set to true to indicate that the dialect supports comments on casts.
# dialect_supports_cast_comments = false
# ...
# Set to true to indicate that the dialect supports comments on collations.
# dialect_supports_collation_comments = false
# ...
# Set to true to indicate that the dialect supports comments on conversions.
# dialect_supports_conversion_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator classes.
# dialect_supports_operator_class_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operator families.
# dialect_supports_operator_family_comments = false
# ...
# Set to true to indicate that the dialect supports comments on operators.
# dialect_supports_operator_comments = false
# ...
# Set to true to indicate that the dialect supports comments on text search configurations.
# dialect_supports_text_search_configuration_comments = false
